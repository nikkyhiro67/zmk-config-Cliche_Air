#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// OS設定を日本語キーボードのまま使用するための変換定義
#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

#undef ZMK_POINTING_DEFAULT_SCRL_VAL

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 6

&mkp_input_listener { input-processors = <&zip_temp_layer 5 250>; };

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    macros {
        exit_AML: exit_AML {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings = <&tog_off MOUSE>;
            label = "exit_AML";
        };

        kp_exit_AML: kp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &exit_AML>;
            label = "KP_exit_AML";
        };
    };

    behaviors {
        tog_off: toggle_layer_off {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };

        mt_exit_AML_on_tap: mt_exit_AML_on_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_exit_AML_ON_TAP";
            bindings = <&kp>, <&kp_exit_AML>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <200>;
        };
    };
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        parentheses: parentheses {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp JP_EISU &kp JP_LPAREN &kp JP_RPAREN &kp LEFT_ARROW>;
            label = "PARENTHESES";
        };

        bracket: bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp JP_EISU &kp JP_LBRACKET &kp JP_RBRACKET &kp LEFT_ARROW>;
            label = "BRACKET";
        };

        braces: braces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG1 &kp JP_LBRACE &kp JP_RBRACE &kp LEFT_ARROW>;
            label = "BRACES";
        };

        screenshot: screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_press>,
                <&kp LEFT_SHIFT &kp S>;

            label = "SCREENSHOT";
        };

        allcopy: allcopy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp LC(A)>, <&macro_press>, <&kp LC(C)>;

            label = "ALLCOPY";
        };

        allcut: allcut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp LC(A)>, <&macro_press>, <&kp LC(X)>;

            label = "ALLCUT";
        };

        move_to_top: move_to_top {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk RCTRL &kp RIGHT_ARROW>;
            label = "MOVE_TO_TOP";
        };

        move_to_end: move_to_end {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk RCTRL &kp LEFT_ARROW>;
            label = "MOVE_TO_END";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                &kp W         &kp E        &kp R           &kp T                           &kp Y          &kp U            &kp I        &kp O              &kp P
&kp A                &mt LSHIFT S  &mt LCTRL D  &mt LEFT_ALT F  &kp G                &kp F9     &kp H          &mt RIGHT_ALT J  &mt RCTRL K  &mt RIGHT_SHIFT L  &mt JP_EQUAL KP_MINUS
&kp Z                &kp X         &kp C        &kp V           &kp B      &kp F2    &kp F10    &kp N          &kp M            &kp COMMA    &kp PERIOD         &kp DELETE
&mt JP_KANA  JP_EISU &kp TAB       &kp LWIN     &mo 2           &kp SPACE  &mo 1     &kp ENTER  &kp BACKSPACE                                                   &lt 4 ESCAPE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_1 {
            bindings = <
&kp JP_ASTERISK  &kp JP_AMPERSAND  &kp JP_LPAREN  &kp JP_RPAREN  &kp JP_PIPE                               &kp KP_PLUS      &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS
&kp JP_TILDE     &kp DOLLAR        &kp PERCENT    &kp JP_CARET   &kp JP_UNDERSCORE                &kp F11  &kp F6           &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_ASTERISK
&kp JP_QUOTE     &kp EXCLAMATION   &kp JP_DQUOTE  &kp HASH       &kp SEMICOLON      &kp JP_COLON  &kp F12  &kp F7           &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_SLASH
&kp JP_LBRACE    &kp JP_RBRACE     &kp JP_AT      &none          &none              &none         &kp F2   &kp KP_NUMBER_0                                                     &none
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_2 {
            bindings = <
&none         &none               &none                &none    &none                                  &none                 &none               &kp UP_ARROW            &none                &none
&parentheses  &bracket            &bracket             &braces  &kp LG(LS(S))           &kp PAGE_UP    &kp HOME              &kp LEFT_ARROW      &kp DOWN_ARROW          &kp RIGHT_ARROW      &none
&none         &kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)  &allcut  &allcopy       &none    &kp PAGE_DOWN  &kp END               &kp LG(LEFT_ARROW)  &kp LG(LS(LEFT_ARROW))  &kp LG(RIGHT_ARROW)  &kp LG(LS(RIGHT_ARROW))
&none         &none               &none                &none    &none          &none    &kp LG(TAB)    &kp LG(LS(UP_ARROW))                                                                   &none
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_3 {
            bindings = <
&kp ESCAPE              &kp LC(LS(TAB))  &kp UP_ARROW             &kp LC(TAB)      &trans                     &trans  &trans  &trans  &trans  &trans
&kp HOME                &kp LEFT_ARROW   &kp DOWN_ARROW           &kp RIGHT_ARROW  &kp END           &trans  &trans  &trans  &trans  &trans  &kp LEFT_SHIFT
&kp LG(LS(LEFT_ARROW))  &trans           &kp LG(LS(RIGHT_ARROW))  &trans           &trans   &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans                  &trans           &trans                   &trans           &trans   &trans    &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_4 {
            bindings = <
&none  &none  &none  &none  &none                        &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&none  &none  &none  &none  &none                 &none  &none           &none         &none         &none         &none
&none  &none  &none  &none  &none  &bootloader    &none  &none           &none         &none         &bt BT_CLR    &none
&none  &none  &none  &none  &none  &none          &none  &bt BT_CLR_ALL                                            &none
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&none  &none  &none  &none  &none                     &none     &none     &none     &none           &none
&none  &none  &none  &none  &none           &none     &mkp MB1  &mkp MB3  &mkp MB2  &msc SCRL_UP    &none
&none  &none  &none  &none  &none  &none    &none     &mkp MB4  &mkp MB5  &none     &msc SCRL_DOWN  &none
&none  &none  &none  &mo 0  &mo 0  &mo 0    &mkp MB4  &mkp MB5                                      &none
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};

#include <dt-bindings/zmk/matrix_transform.h>
#include <zmk_driver_animation/animation.dtsi>
#include <zmk_driver_animation/animation_layer_status.dtsi>
#include <dt-bindings/zmk_driver_animation/animation_control.h>
#include <dt-bindings/zmk_driver_animation/animation_trigger.h>
#include <behaviors/animation_trigger.dtsi>

/ {
    chosen {
        // キースキャンとマトリクス変換
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;

        // アニメーション制御
        zmk,animation = &root_animation;
        zmk,animation-control = &root_animation;
    };

    //
    // ──────────────────────────────
    // キーマトリクス変換定義
    // ──────────────────────────────
    //
    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <11>;
        rows = <4>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4)                     RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4)             RC(3,6) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)     RC(3,7) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)     RC(3,8) RC(3,9)                         RC(3,10)
        >;
    };

    //
    // ──────────────────────────────
    // キースキャン設定
    // ──────────────────────────────
    //
    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";
        diode-direction = "col2row";
        row-gpios
            = <&xiao_d 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&xiao_d 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&xiao_d 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&xiao_d 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
    };

    //
    // ──────────────────────────────
    // エンコーダ設定
    // ──────────────────────────────
    //
    left_encoder: encoder_left {
        compatible = "alps,ec11";
        a-gpios = <&xiao_d 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&xiao_d 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <24>;
        status = "disabled";
    };

    right_encoder: encoder_right {
        status = "disabled";
    };

    //
    // ──────────────────────────────
    // センサー定義
    // ──────────────────────────────
    //
    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
        triggers-per-rotation = <10>;
    };

    //
    // ──────────────────────────────
    // LEDアニメーション制御関連
    // ──────────────────────────────
    //
    animation: animation {
        compatible = "zmk,animation";
        drivers = <&led_strip>;
        pixels = <&pixel 0 0>, <&pixel 1 0>, <&pixel 2 0>, <&pixel 3 0>;
        chain-lengths = <4>;
    };

    led_power: led_power {
        compatible = "zmk,ext-power-transient";
        control-gpios = <&gpio0 10 (GPIO_ACTIVE_LOW)>; // NFC2
    };

    root_animation: animation_0 {
        compatible = "zmk,animation-control";
        label = "ANIMATION_CTRL_0";
        powered-animations = <&endpoint_status &rainbow_animation>;
        battery-animations = <&empty_animation>;
        behavior-animations = <&battery_status &endpoint_status &animation_layer_status>;
        init-animation = <&init_animation>;
        activation-animation = <&battery_status>;
        activation-animation-duration-ms = <1000>;
        ext-power = <&led_power>;
    };

    //
    // Animation definitions
    //
    init_animation: init_animation {
        compatible = "zmk,animation-compose";
        animations = <&battery_status &black_animation &endpoint_status>;
        durations-ms = <1000 200 1000>;
    };

    black_animation: black_animation {
        compatible = "zmk,animation-solid";
        pixels = <0 1 2 3>;
        colors = <0x000000>;
    };

    empty_animation: empty_animation {
        compatible = "zmk,animation-empty";
        status = "okay";
    };

    rainbow_animation: rainbow_animation {
        compatible = "zmk,animation-solid";
        status = "okay";
        pixels = <0 1 2 3>;
        colors = <
            0xFF0000
            0xFFFF00
            0x00FF00
            0x00FFFF
            0x0000FF
            0xFF00FF
        >;
    };

    endpoint_status: endpoint_status {
        compatible = "zmk,animation-endpoint";
        status = "okay";
        pixels = <0 1 2 3>;
        color-open = <0xFFFF00>;
        color-connected = <0x0000FF>;
        color-disconnected = <0xFF0000>;
        color-usb = <0x008000>;
    };

    battery_status: battery_status {
        compatible = "zmk,animation-battery-status";
        status = "okay";
        pixels = <0 1 2 3>;
        color-high = <0x00FF00>;
        color-middle = <0xFFFF00>;
        color-low = <0xFF0000>;
    };
};

// ──────────────────────────────
// SPIピン設定 (LED制御用)
// ──────────────────────────────
&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 9)>; // NFC1
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 9)>;
            low-power-enable;
        };
    };
};

// ──────────────────────────────
// SPIデバイス設定 (WS2812)
// ──────────────────────────────
&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        reg = <0>;
        spi-max-frequency = <4000000>;
        chain-length = <4>;
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <
            LED_COLOR_ID_GREEN
            LED_COLOR_ID_RED
            LED_COLOR_ID_BLUE
        >;
    };
};

// ──────────────────────────────
// レイヤーアニメーションカラー設定
// ──────────────────────────────
&animation_layer_status {
    pixels = <0 1 2 3>;
    default-color = <0x00 0x00 0xFF>;
    colors = <
        0
        0x26 0xC6 0xDA
        0xCC 0x00 0x00
        0xFF 0xFF 0xFF
        0xE8 0x90 0x41
    >;
};
